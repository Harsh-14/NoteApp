{"version":3,"sources":["helpers/fetchFunctions.js","reducers/authReducers.js","components/Auth.js","components/Navbar1.js","reducers/noteReducers.js","components/Note1.js","components/NoteView.js","components/FindNote.js","components/ConfirmPass.js","components/SendEmail.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["fetchFunction","api","body","a","fetch","method","headers","Accept","Authorization","localStorage","getItem","JSON","stringify","res","json","console","log","fetchFunction2","type","fetchFunction3","signupUser","createAsyncThunk","result","signinUser","sendEmail","changePass","deleteUser","id","authReducer","createSlice","name","initialState","token","loading","error","enter","reducers","addToken","state","action","logout","removeItem","extraReducers","fulfilled","payload","message","pending","setItem","actions","Auth","navigate","useNavigate","defaultOptions","loop","autoplay","animationData","anim2","rendererSettings","preserveAspectRatio","useState","email","setEmail","password","setPassword","username","setUsername","auth","setAuth","dispatch","useDispatch","useSelector","user","xmlns","viewBox","fill","d","Container","className","Row","Col","xs","md","style","backgroundColor","toLocaleUpperCase","Alert","variant","Spinner","animation","role","Form","Group","controlId","Label","Control","placeholder","value","onChange","e","target","onClick","Button","marginRight","options","height","width","Navbar1","Navbar","collapseOnSelect","expand","bg","Brand","to","Toggle","Collapse","Nav","createNote","getallNotes","getImpnote","deletenotes","updatenotes","note","subject","findNotesBySubject","noteReducer","findNote","notelist","impnotes","push","rejected","undefined","Note1","color","useSpeechSynthesis","speak","cancel","anim1","deleteTooltip","props","Tooltip","updateTooltip","impTooltip","speakerTooltip","setsubject","setnote","imp_note","setImp_note","remove","setRemove","up","setUp","show","setShow","speech","setSpeech","recive","setRecive","mic","setMic","useSpeechRecognition","onResult","listen","stop","listening","useEffect","onClose","dismissible","Heading","theme","Check","label","OverlayTrigger","placement","delay","hide","overlay","size","marginLeft","alert","background","map","item","Card","toLowerCase","text","Header","Body","Title","Text","dangerouslySetInnerHTML","__html","_id","imp","NoteView","location","useLocation","show1","setShow1","subject1","setsubject1","note1","setnote1","imp1","setImp1","setId","as","onDoubleClick","FindNote","search","setSearch","impHead","setImpHead","anim3","bottom","ConfirmPass","pass2","setPass2","code","setCode","SendEmail","App","path","exact","element","exaxt","store","configureStore","reducer","authReducers","noteReducers","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a539df7.chunk.js","sourcesContent":["export const fetchFunction = async (api, body) => {\r\n  try {\r\n    const res = await fetch(api, {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json, text/plain, */*\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    return await res.json();\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\nexport const fetchFunction2 = async (api, type) => {\r\n  // console.log(type,body)\r\n  try {\r\n    const res = await fetch(api, {\r\n      method: type,\r\n      headers: {\r\n        Accept: \"application/json, text/plain, */*\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n\r\n    return await res.json();\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const fetchFunction3 = async (api, body) => {\r\n  try {\r\n    const res = await fetch(api, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify(body)\r\n    });\r\n    return await res.json();\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { fetchFunction, fetchFunction2 } from \"../helpers/fetchFunctions\";\r\nconst initialState = {\r\n  token: \"\",\r\n  loading: false,\r\n  error: \"\",\r\n  enter: false,\r\n};\r\n\r\n//for network requests we use asynkThunk\r\nexport const signupUser = createAsyncThunk(\"signupUser\", async (body) => {\r\n  const result = await fetchFunction(\"/NOTE_PAD/signup\", body);\r\n\r\n  return result;\r\n});\r\n\r\nexport const signinUser = createAsyncThunk(\"signinUser\", async (body) => {\r\n  const result = await fetchFunction(\"/NOTE_PAD/signin\", body);\r\n  // const result = await fetchFunction(\"/signin\", body);\r\n  return result;\r\n});\r\n\r\nexport const sendEmail = createAsyncThunk(\"sendEmail\", async (body) => {\r\n  const result = await fetchFunction(\"/NOTE_PAD/email-send\", body);\r\n  return result;\r\n});\r\n\r\nexport const changePass = createAsyncThunk(\"changePass\", async (body) => {\r\n  const result = await fetchFunction(\"/NOTE_PAD/changePassword\", body);\r\n  return result;\r\n});\r\n\r\nexport const deleteUser = createAsyncThunk(\"deleteUser\", async ({ id }) => {\r\n  const result = await fetchFunction2(\"/NOTE_PAD/deleteUser/:id\");\r\n  return result;\r\n});\r\n\r\nconst authReducer = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    //actions\r\n    addToken: (state, action) => {\r\n      state.token = localStorage.getItem(\"token\");\r\n    },\r\n    logout: (state, action) => {\r\n      state.token = null;\r\n      localStorage.removeItem(\"token\");\r\n    },\r\n  },\r\n  //actions put in extraReducers\r\n  extraReducers: {\r\n    [signupUser.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      if (action.payload.error) {\r\n        state.error = action.payload.error;\r\n      } else {\r\n        state.error = action.payload.message;\r\n      }\r\n    },\r\n    [signupUser.pending]: (state, action) => {\r\n      state.loading = true;\r\n    },\r\n\r\n    [signinUser.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      if (action.payload.error) {\r\n        state.error = action.payload.error;\r\n      } else {\r\n        state.error = action.payload.message;\r\n        state.token = action.payload.token;\r\n        localStorage.setItem(\"token\", action.payload.token);\r\n      }\r\n    },\r\n\r\n    [signinUser.pending]: (state, action) => {\r\n      state.loading = true;\r\n    },\r\n\r\n    [sendEmail.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      if (action.payload.error) {\r\n        state.error = action.payload.error;\r\n      } else {\r\n        state.error = action.payload.message;\r\n      }\r\n    },\r\n\r\n    [sendEmail.pending]: (state, action) => {\r\n      state.loading = true;\r\n    },\r\n\r\n    [changePass.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      if (action.payload.error) {\r\n        state.error = action.payload.error;\r\n        state.enter = false;\r\n      } else {\r\n        state.error = action.payload.message;\r\n        state.enter = true;\r\n      }\r\n    },\r\n    [changePass.pending]: (state, action) => {\r\n      state.loading = true;\r\n    },\r\n    [deleteUser.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      if (action.payload.error) {\r\n        state.error = action.payload.error;\r\n      } else {\r\n        state.error = action.payload.message;\r\n      }\r\n    },\r\n    [deleteUser.pending]: (state, action) => {\r\n      state.loading = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToken, logout } = authReducer.actions;\r\nexport default authReducer.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signinUser, signupUser } from \"../reducers/authReducers\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport Lottie from \"react-lottie\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport anim2 from \"../lotties/anim2.json\";\r\nimport { BoxArrowInRight} from \"react-bootstrap-icons\";\r\nexport default function Auth() {\r\n\r\n  const navigate = useNavigate()\r\n\r\n   \r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: anim2,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [auth, setAuth] = useState(\"signin\");\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, error } = useSelector((state) => state.user);\r\n  const authenticate = () => {\r\n    if (auth == \"signin\") {\r\n      dispatch(signinUser({ username, password }));\r\n    } else {\r\n      dispatch(signupUser({ email, username, password }));\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n        <path\r\n          fill=\"#d13d4b\"\r\n          fill-opacity=\"1\"\r\n          d=\"M0,224L60,229.3C120,235,240,245,360,240C480,235,600,213,720,186.7C840,160,960,128,1080,128C1200,128,1320,160,1380,176L1440,192L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\"\r\n        ></path>\r\n      </svg>\r\n      <Container className=\"mt-5\">\r\n        <div>\r\n          <Row>\r\n            <Container>\r\n              <Row>\r\n                <Col xs={12} md={6} style={{ backgroundColor: \"\" }}>\r\n                  <h1>{auth.toLocaleUpperCase()} </h1>\r\n                  {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                  <br />\r\n                  {loading && (\r\n                    <div className=\"text-center m-5\">\r\n                      <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                      </Spinner>\r\n                    </div>\r\n                  )}\r\n\r\n                  <Form>\r\n                    {auth == \"signup\" ? (\r\n                      <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                          placeholder=\"Enter Your Email\"\r\n                          type=\"email\"\r\n                          value={email}\r\n                          onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                      </Form.Group>\r\n                    ) : (\r\n                      <h6></h6>\r\n                    )}\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"username\">\r\n                      <Form.Label>Username</Form.Label>\r\n                      <Form.Control\r\n                        placeholder=\"Enter username\"\r\n                        type=\"text\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        placeholder=\"Enter Your username or email\"\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"note\">\r\n                      <Form.Label>Password</Form.Label>\r\n                      <Form.Control\r\n                        placeholder=\"Enter Note\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        placeholder=\"password\"\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <h6 className=\"nav-link\" onClick={() => navigate('/SendEmail')}> Forget password ?</h6>\r\n\r\n                    {auth == \"signin\" ? (\r\n                      <h6 className=\"nav-link\"    onClick={() => setAuth(\"signup\")}>\r\n                      Don't have an account ?\r\n                      </h6>\r\n                    ) : (\r\n                      <h6  className=\"nav-link\"  onClick={() => setAuth(\"signin\")}>\r\n                      Already have an account ?\r\n                      </h6>\r\n                    )}\r\n\r\n                    \r\n                    \r\n                    <Button variant=\"danger\" className=\"mt-3\" onClick={() => authenticate()}>\r\n                    <BoxArrowInRight style={{marginRight:3}}/>\r\n                      {auth.toLocaleUpperCase()}\r\n                    </Button>\r\n                  </Form>\r\n                </Col>\r\n                <Col xs={12} md={6} style={{ backgroundColor: \"\" }}>\r\n                  <Lottie options={defaultOptions} height={400} width={400} />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Row>\r\n        </div>\r\n      </Container>\r\n\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n        <path\r\n          fill=\"#d13d4b\"\r\n          fill-opacity=\"1\"\r\n          d=\"M0,32L48,37.3C96,43,192,53,288,69.3C384,85,480,107,576,133.3C672,160,768,192,864,186.7C960,181,1056,139,1152,133.3C1248,128,1344,160,1392,176L1440,192L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\r\n        ></path>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Navbar, Nav,  Container, Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logout } from \"../reducers/authReducers\";\r\n\r\nexport default function Navbar1() {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      expand=\"lg\"\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      className=\"sticky-top\"\r\n    >\r\n      <Container>\r\n        <Navbar.Brand to=\"/\">Note Karo</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"me-auto\"></Nav>\r\n          <Nav>\r\n            <Link className=\"nav-link\" to=\"/\">\r\n              AddNote{\" \"}\r\n            </Link>\r\n            <Link className=\"nav-link\" to=\"/FindNote\">\r\n              Search\r\n            </Link>\r\n          </Nav>\r\n          <Nav>\r\n          \r\n          <Button\r\n             \r\n            variant=\"danger\"\r\n              onClick={() => {\r\n                dispatch(logout());\r\n              }}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  fetchFunction,\r\n  fetchFunction2,\r\n  fetchFunction3,\r\n} from \"../helpers/fetchFunctions\";\r\nconst initialState = {\r\n  findNote: [],\r\n  loading: \"false\",\r\n  notelist: [],\r\n  impnotes:[],\r\n  error: \"\",\r\n};\r\n\r\nexport const createNote = createAsyncThunk(\"createNote\", async (body) => {\r\n  const result = await fetchFunction(\"/NOTE_PAD/addnote\", body);\r\n  return result;\r\n});\r\nexport const getallNotes = createAsyncThunk(\"getallNotes\", async () => {\r\n  const result = await fetchFunction2(\"/NOTE_PAD/getallnotes\", \"get\");\r\n  // console.log(result);\r\n  return result;\r\n});\r\n\r\nexport const getImpnote = createAsyncThunk(\"getImpnote\", async () => {\r\n  const result = await fetchFunction2(\"/NOTE_PAD/imp_note\", \"get\");\r\n  return result;\r\n})\r\n\r\n\r\n\r\nexport const deletenotes = createAsyncThunk(\"deletenotes\", async (id) => {\r\n  const result = await fetchFunction2(`/NOTE_PAD/remove/${id}`, \"delete\");\r\n  // console.log(result);\r\n  return result;\r\n});\r\n\r\nexport const updatenotes = createAsyncThunk(\r\n  \"updatenotes\",\r\n  async ({ id, note, subject }) => {\r\n    // console.log(id, note, subject);\r\n    const body = { note, subject };\r\n    const result = await fetchFunction3(`/NOTE_PAD/update/${id}`, body);\r\n    return result;\r\n  }\r\n);\r\n\r\nexport const findNotesBySubject = createAsyncThunk(\r\n  \"findNotesBySubject\",\r\n  async (subject) => {\r\n    const result = await fetch(`NOTE_PAD/findbysubject/${subject}`, {\r\n      method: \"get\",\r\n      headers: {\r\n        Accept: \"application/json, text/plain, */*\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n    const res = await result.json();\r\n    return res;\r\n  }\r\n);\r\n\r\nexport const noteReducer = createSlice({\r\n  name: \"note\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [createNote.fulfilled]: (state, action) => {\r\n      state.error = action.payload.error;\r\n      state.notelist.push(action.payload.message);\r\n    },\r\n    [createNote.pending]: (state, action) => {\r\n      state.loading = true;\r\n    },\r\n    [createNote.rejected]:(state,action) => {\r\n      state.error = action.payload.message\r\n    },\r\n    [getallNotes.fulfilled]: (state, action) => {\r\n      state.notelist = action.payload.message;\r\n    },\r\n    [getallNotes.pending]: (state, action) => {\r\n      state.loading = true;\r\n    },\r\n    [getallNotes.rejected]:(state,action) => {\r\n      state.error = \"Please Add Note\"\r\n    },\r\n\r\n    [deletenotes.fulfilled]: (state, action) => {\r\n      // return state.notelist.filter((item) => {\r\n      //   return item._id != action.payload.message._id;\r\n      // })\r\n      state.error = action.payload.message\r\n    },\r\n    [updatenotes.fulfilled]: (state, action) => {\r\n      if(action.payload.message == undefined){\r\n      state.error = \"please fill the fileds\";\r\n      }\r\n      else{\r\n        state.error = action.payload.message\r\n      }\r\n\r\n    },\r\n    [updatenotes.pending]: (state, action) => {\r\n      state.loading = true;\r\n    },\r\n    [updatenotes.rejected]:(state,action) => {\r\n      state.error = \"Please fill all the fields\"\r\n    },\r\n    [findNotesBySubject.fulfilled]: (state, action) => {\r\n      state.findNote = action.payload.message;\r\n    },\r\n    [findNotesBySubject.pending]: (state, action) => {\r\n      state.loading = true;\r\n    },\r\n    [findNotesBySubject.rejected]:(state,action) =>{\r\n      state.error = \"Note Note found!\"\r\n    },\r\n\r\n    [getImpnote.fulfilled]:(state,action) => {\r\n      state.impnotes = action.payload.message;\r\n    },\r\n    [getImpnote.pending]:(state,action) => {\r\n      state.loading = true;\r\n    },\r\n    [getImpnote.rejected]:(state,action) => {\r\n      state.error = \"Imp Note Not found!\"\r\n    }\r\n    \r\n  },\r\n});\r\n\r\nexport default noteReducer.reducer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navbar1 from \"./Navbar1\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport { useSpeechSynthesis, useSpeechRecognition } from \"react-speech-kit\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n// import { useSpeechRecognition } from 'react-speech-kit';\r\nimport Lottie from \"react-lottie\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport anim1 from \"../lotties/anim1.json\";\r\nimport { PencilFill } from \"react-bootstrap-icons\";\r\nimport { TrashFill } from \"react-bootstrap-icons\";\r\nimport { ShieldFillCheck } from \"react-bootstrap-icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNote, getallNotes, deletenotes } from \"../reducers/noteReducers\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { MegaphoneFill, Megaphone, MicFill, Mic } from \"react-bootstrap-icons\";\r\n\r\nexport default function Note1() {\r\n  const { speak, cancel } = useSpeechSynthesis();\r\n  const navigate = useNavigate();\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: anim1,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n\r\n  const deleteTooltip = (props) => (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n      delete\r\n    </Tooltip>\r\n  );\r\n\r\n  const updateTooltip = (props) => (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n      update\r\n    </Tooltip>\r\n  );\r\n\r\n  const impTooltip = (props) => (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n      Importent\r\n    </Tooltip>\r\n  );\r\n\r\n  const speakerTooltip = (props) => (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n      Speaker\r\n    </Tooltip>\r\n  );\r\n\r\n  const MicTooltip = (props) => (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n      Mic\r\n    </Tooltip>\r\n  );\r\n  const dispatch = useDispatch();\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [note, setnote] = useState(\"\");\r\n  const [imp_note, setImp_note] = useState(false);\r\n  const [remove, setRemove] = useState(false);\r\n  const [up, setUp] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [speech, setSpeech] = useState(false);\r\n  const [recive, setRecive] = useState(\"\"); //value\r\n  const [mic, setMic] = useState(false);\r\n  // const [lisNote,setLisNote]  = useState(\"\");\r\n  // speech means speaker app will be speak\r\n  // listen means  app will listen user input\r\n  const { listen, listening, stop } = useSpeechRecognition({\r\n    onResult: (result) => {\r\n      setRecive(result);\r\n      setnote(result);\r\n    },\r\n  });\r\n\r\n  // console.log(recive);\r\n\r\n  var color;\r\n  const { findNote, notelist, impnotes, error, loading } = useSelector(\r\n    (state) => state.note\r\n  );\r\n\r\n  const addNote = () => {\r\n    dispatch(createNote({ subject, note, imp_note }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getallNotes());\r\n    setRemove(false);\r\n    setUp(false);\r\n  }, [remove, up]);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar1 />\r\n\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n        <path\r\n          fill=\"#d13d4b\"\r\n          fill-opacity=\"1\"\r\n          d=\"M0,224L60,229.3C120,235,240,245,360,240C480,235,600,213,720,186.7C840,160,960,128,1080,128C1200,128,1320,160,1380,176L1440,192L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\"\r\n        ></path>\r\n      </svg>\r\n\r\n      <Container className=\"mt-5\">\r\n        <div>\r\n          <Row>\r\n            <h3 className=\"mb-5\">New Note</h3>\r\n            <br />\r\n            {show == true ? (\r\n              <Alert\r\n                variant=\"success\"\r\n                onClose={() => setShow(false)}\r\n                dismissible\r\n              >\r\n                <Alert.Heading>Note added</Alert.Heading>\r\n              </Alert>\r\n            ) : (\r\n              <p></p>\r\n            )}\r\n\r\n            <Container>\r\n              <Row>\r\n                <Col xs={12} md={6} style={{ backgroundColor: \"\" }}>\r\n                  <Form>\r\n                    <Form.Group className=\"mb-3\" controlId=\"title\">\r\n                      <Form.Label>Title</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={subject}\r\n                        onChange={(e) => setsubject(e.target.value)}\r\n                        placeholder=\"Enter Title\"\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"note\">\r\n                      <Form.Label>Note</Form.Label>\r\n                      {/* <Form.Control\r\n                        as=\"textarea\"\r\n                        value={note}\r\n                        onChange={(e) => setnote(e.target.value)}\r\n                        placeholder=\"Enter Note\"\r\n                      /> */}\r\n                      {mic == true ? (\r\n                        <ReactQuill\r\n                          theme=\"snow\"\r\n                          value={recive}\r\n                          onChange={setRecive}\r\n                          placeholder=\"Enter Note\"\r\n                        />\r\n                      ) : (\r\n                        <ReactQuill\r\n                          theme=\"snow\"\r\n                          value={note}\r\n                          onChange={setnote}\r\n                          placeholder=\"Enter Note\"\r\n                        />\r\n                      )}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 \" controlId=\"formBasicCheckbox\">\r\n                      <Form.Check\r\n                        type=\"switch\"\r\n                        value={imp_note}\r\n                        onChange={() => setImp_note(!false)}\r\n                        label=\"Importent Note\"\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      onClick={() => {\r\n                        addNote();\r\n                        setShow(true);\r\n                      }}\r\n                    >\r\n                      <PencilFill style={{ marginRight: 3 }} />\r\n                      Add Note\r\n                    </Button>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      delay={{ show: 250, hide: 400 }}\r\n                      overlay={MicTooltip}\r\n                    >\r\n                      {mic == true ? (\r\n                        <Mic\r\n                          size={25}\r\n                          style={{ marginLeft: 20 }}\r\n                          onClick={() => {\r\n                            stop();\r\n                            setMic(false);\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <MicFill\r\n                          size={25}\r\n                          style={{ marginLeft: 20 }}\r\n                          onClick={() => {\r\n                            listen();\r\n                            setMic(true);\r\n                            alert(\r\n                              \"Mic only supports in Chrome and it is beta version\"\r\n                            );\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </OverlayTrigger>\r\n                  </Form>\r\n                </Col>\r\n                <Col xs={12} md={6} style={{ backgroundColor: \"\" }}>\r\n                  <Lottie options={defaultOptions} height={400} width={400} />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Row>\r\n        </div>\r\n      </Container>\r\n\r\n      <Container className=\"mt-5\" style={{ background: \"\" }}>\r\n        <h1 className=\"text-center m-5\">Notes</h1>\r\n\r\n        <Row>\r\n          {notelist.map((item) => {\r\n            color = \"Danger\";\r\n            return (\r\n              <Card\r\n                bg={color.toLowerCase()}\r\n                key={item._id}\r\n                text={color.toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n                style={{ width: \"16rem\" }}\r\n                className=\"m-2 mr-3\"\r\n              >\r\n                <Card.Header>\r\n                  {item.imp_note == true ? (\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      delay={{ show: 250, hide: 400 }}\r\n                      overlay={impTooltip}\r\n                    >\r\n                      <ShieldFillCheck />\r\n                    </OverlayTrigger>\r\n                  ) : (\r\n                    <p></p>\r\n                  )}\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Card.Title> {item.subject} </Card.Title>\r\n                  {/* <Card.Text>{item.note}</Card.Text> */}\r\n                  <Card.Text>\r\n                    {\" \"}\r\n                    <div dangerouslySetInnerHTML={{ __html: item.note }}></div>\r\n                  </Card.Text>\r\n\r\n                  <div>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      delay={{ show: 250, hide: 400 }}\r\n                      overlay={updateTooltip}\r\n                    >\r\n                      <PencilFill\r\n                        size={25}\r\n                        style={{ marginRight: 20 }}\r\n                        onClick={() => {\r\n                          console.log(\"Clicked\");\r\n                          navigate(\"/NoteView\", {\r\n                            state: {\r\n                              subject: item.subject,\r\n                              note: item.note,\r\n                              id: item._id,\r\n                              imp: item.imp_note,\r\n                            },\r\n                          });\r\n                        }}\r\n                      />\r\n                    </OverlayTrigger>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      delay={{ show: 250, hide: 400 }}\r\n                      overlay={deleteTooltip}\r\n                    >\r\n                      <TrashFill\r\n                        size={25}\r\n                        onClick={() => {\r\n                          setRemove(true);\r\n                          dispatch(deletenotes(item._id));\r\n                        }}\r\n                      />\r\n                    </OverlayTrigger>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      delay={{ show: 250, hide: 400 }}\r\n                      overlay={speakerTooltip}\r\n                    >\r\n                      {speech == false ? (\r\n                        <MegaphoneFill\r\n                          size={25}\r\n                          style={{ marginLeft: 20 }}\r\n                          onClick={() => {\r\n                            speak({\r\n                              text: item.note,\r\n                            });\r\n                            setSpeech(true);\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <Megaphone\r\n                          size={25}\r\n                          style={{ marginLeft: 20 }}\r\n                          onClick={() => {\r\n                            cancel();\r\n                            setSpeech(false);\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </OverlayTrigger>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n        <path\r\n          fill=\"#d13d4b\"\r\n          fill-opacity=\"1\"\r\n          d=\"M0,32L48,37.3C96,43,192,53,288,69.3C384,85,480,107,576,133.3C672,160,768,192,864,186.7C960,181,1056,139,1152,133.3C1248,128,1344,160,1392,176L1440,192L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\r\n        ></path>\r\n      </svg>\r\n\r\n      <footer style={{ background: \"black\", height: 50 }} xs={12} md={12}>\r\n        <p style={{ color: \"white\" }}>\r\n          © 2021 Copyright: Lk@Darshan.All rights reserved\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport { useSpeechSynthesis } from \"react-speech-kit\";\r\nimport { deletenotes, updatenotes } from \"../reducers/noteReducers\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { PencilFill } from \"react-bootstrap-icons\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { MegaphoneFill, Megaphone } from \"react-bootstrap-icons\";\r\nimport Navbar1 from \"./Navbar1\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nexport default function NoteView() {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [note, setnote] = useState(\"\");\r\n  const [imp_note, setImp_note] = useState(false);\r\n  const [remove, setRemove] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [show1, setShow1] = useState(false);\r\n  const [subject1, setsubject1] = useState(location.state.subject);\r\n  const [note1, setnote1] = useState(location.state.note);\r\n  const [imp1, setImp1] = useState(location.state.imp);\r\n  const [id, setId] = useState(\"\");\r\n  const [x, setX] = useState(\"\");\r\n\r\n  const { speak, cancel } = useSpeechSynthesis();\r\n\r\n  const updateNote = () => {\r\n    dispatch(updatenotes({ id, subject, note, imp_note }));\r\n    // console.log(\"dispatch\", id, subject, note);\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar1 />\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n        <path\r\n          fill=\"#d13d4b\"\r\n          fill-opacity=\"1\"\r\n          d=\"M0,224L60,229.3C120,235,240,245,360,240C480,235,600,213,720,186.7C840,160,960,128,1080,128C1200,128,1320,160,1380,176L1440,192L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\"\r\n        ></path>\r\n      </svg>\r\n\r\n      <Container>\r\n        <Row>\r\n          {show == true ? (\r\n            <Alert\r\n              variant=\"success\"\r\n              onClose={() => {\r\n                setShow(false);\r\n              }}\r\n              dismissible\r\n            >\r\n              <Alert.Heading>Note deleted successfully </Alert.Heading>\r\n              <p>You can't update this note </p>\r\n            </Alert>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n          {show1 == true ? (\r\n            <Alert\r\n              variant=\"success\"\r\n              onClose={() => {\r\n                setShow1(false);\r\n              }}\r\n              dismissible\r\n            >\r\n              <Alert.Heading>Note updated successfully </Alert.Heading>\r\n              {/* <p>You can't update this note </p> */}\r\n            </Alert>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n          <Col xs={12} md={6}>\r\n            <Form>\r\n              <Form.Group className=\"mb-3\" controlId=\"title\">\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={subject}\r\n                  onChange={(e) => {\r\n                    setsubject(e.target.value);\r\n                  }}\r\n                  placeholder=\"Enter Title\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"note\">\r\n                <Form.Label>Note</Form.Label>\r\n                {/* <Form.Control\r\n                  as=\"textarea\"\r\n                  value={note}\r\n                  onChange={(e) => {\r\n                    setnote(e.target.value);\r\n                  }}\r\n                  placeholder=\"Enter Note\"\r\n                /> */}\r\n\r\n                <ReactQuill theme=\"snow\" value={note} onChange={setnote} />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3 \" controlId=\"formBasicCheckbox\">\r\n                <Form.Check\r\n                  type=\"switch\"\r\n                  value={imp1}\r\n                  onChange={() => setImp_note(!false)}\r\n                  label=\"Importent Note\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button\r\n                variant=\"danger\"\r\n                // type=\"submit\"\r\n                onClick={() => {\r\n                  updateNote();\r\n                  setShow1(true);\r\n                  setnote1(note);\r\n                  setsubject1(subject);\r\n                  setImp1(imp_note);\r\n                }}\r\n              >\r\n                <PencilFill style={{ marginRight: 3 }} />\r\n                update\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n\r\n          <Col xs={12} md={6} className=\"mt-3\">\r\n            <Card>\r\n              <Card.Header as=\"h5\">\r\n                {imp1 == true ? <h3>Importnent</h3> : <p></p>}\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>{subject1}</Card.Title>\r\n                {/* <Card.Text>{note1}</Card.Text> */}\r\n                {/* <ReactQuill\r\n                      value={note1}\r\n                      readOnly={true}\r\n                      theme={\"bubble\"}\r\n                    /> */}\r\n                <div dangerouslySetInnerHTML={{ __html: note1 }}></div>\r\n                {/* <Card.Title>{location.state.subject }</Card.Title>\r\n                <Card.Text>{location.state.note }</Card.Text> */}\r\n                <Button\r\n                  style={{ marginRight: 5 }}\r\n                  variant=\"danger\"\r\n                  onClick={() => {\r\n                    setsubject(subject1);\r\n                    setnote(note1);\r\n                    setId(location.state.id);\r\n                    setImp_note(imp1);\r\n                  }}\r\n                >\r\n                  update\r\n                </Button>\r\n                <Button\r\n                  variant=\"danger\"\r\n                  onClick={() => {\r\n                    setRemove(true);\r\n                    setShow(true);\r\n                    dispatch(deletenotes(location.state.id));\r\n                  }}\r\n                >\r\n                  delete\r\n                </Button>\r\n                <Button\r\n                  variant=\"danger\"\r\n                  style={{ marginLeft: 5 }}\r\n                  onClick={() => {\r\n                    speak({\r\n                      text: note1,\r\n                    });\r\n                  }}\r\n                  onDoubleClick={() => {\r\n                    cancel();\r\n                  }}\r\n                >\r\n                  <MegaphoneFill style={{ marginRight: 3 }} />\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n        <path\r\n          fill=\"#d13d4b\"\r\n          fill-opacity=\"1\"\r\n          d=\"M0,32L48,37.3C96,43,192,53,288,69.3C384,85,480,107,576,133.3C672,160,768,192,864,186.7C960,181,1056,139,1152,133.3C1248,128,1344,160,1392,176L1440,192L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\r\n        ></path>\r\n      </svg>\r\n      <footer style={{ background: \"black\", height: 50 }} xs={12} md={12}>\r\n        <p style={{ color: \"white\" }}>\r\n          © 2021 Copyrights: Lk@Darshan.All rights reserved\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport Navbar1 from \"./Navbar1\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Lottie from \"react-lottie\";\r\nimport anim3 from \"../lotties/anim3.json\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getallNotes,\r\n  deletenotes,\r\n  findNotesBySubject,\r\n  getImpnote,\r\n} from \"../reducers/noteReducers\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PencilFill } from \"react-bootstrap-icons\";\r\nimport { Search } from \"react-bootstrap-icons\";\r\nimport { TrashFill } from \"react-bootstrap-icons\";\r\nimport { ShieldFillCheck } from \"react-bootstrap-icons\";\r\n\r\nexport default function FindNote() {\r\n  const [remove, setRemove] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [impHead, setImpHead] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: anim3,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  var color;\r\n  const { findNote, notelist, impnotes, error, loading } = useSelector(\r\n    (state) => state.note\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setImpHead(false);\r\n    setRemove(false);\r\n  }, [impHead, remove]);\r\n\r\n  const deleteTooltip = (props) => (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n      delete\r\n    </Tooltip>\r\n  );\r\n\r\n  const updateTooltip = (props) => (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n      update\r\n    </Tooltip>\r\n  );\r\n\r\n  const impTooltip = (props) => (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n      Importent\r\n    </Tooltip>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Navbar1 />\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n        <path\r\n          fill=\"#d13d4b\"\r\n          fill-opacity=\"1\"\r\n          d=\"M0,224L60,229.3C120,235,240,245,360,240C480,235,600,213,720,186.7C840,160,960,128,1080,128C1200,128,1320,160,1380,176L1440,192L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\"\r\n        ></path>\r\n      </svg>\r\n      <Container>\r\n        <h1 className=\"text-center m-5\">Search Note</h1>\r\n        {show == true ? (\r\n          <Alert\r\n            variant=\"success\"\r\n            onClose={() => {\r\n              setShow(false);\r\n            }}\r\n            dismissible\r\n          >\r\n            <Alert.Heading>Note deleted successfully</Alert.Heading>\r\n            <p>You can Refressing list by click imp_note button</p>\r\n          </Alert>\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n\r\n        <Row>\r\n          <Col xs={12} md={6}>\r\n            <Form className=\"mt-3\">\r\n              <Form.Group className=\"mb-3\" controlId=\"title\">\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Title\"\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button\r\n                variant=\"danger\"\r\n                onClick={() => dispatch(findNotesBySubject(search))}\r\n              >\r\n                <Search style={{ marginRight: 3 }} />\r\n                FindNote\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"danger\"\r\n                className=\"m-3\"\r\n                onClick={() => {\r\n                  dispatch(getImpnote(search[0]));\r\n                  setImpHead(true);\r\n                  console.log(\"clicked\");\r\n                }}\r\n              >\r\n                <Search style={{ marginRight: 3 }} />\r\n                Impnotes\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n          <Col xs={12} md={6} className=\"mt-3\">\r\n            <Lottie options={defaultOptions} height={200} width={200} />\r\n          </Col>\r\n        </Row>\r\n        {findNote == true ? (\r\n          <h1 className=\"text-center m-5\">Your Search Note</h1>\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n        <Row>\r\n          {findNote.map((item) => {\r\n            color = \"Danger\";\r\n            return (\r\n              <div>\r\n                <h1 className=\"text-center m-5\">Your Search Note</h1>\r\n                <Card\r\n                  bg={color.toLowerCase()}\r\n                  key={item._id}\r\n                  text={color.toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n                  style={{ width: \"16rem\" }}\r\n                  className=\"m-2 mr-3\"\r\n                >\r\n                  <Card.Header>\r\n                    {item.imp_note == true ? (\r\n                      <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        delay={{ show: 250, hide: 400 }}\r\n                        overlay={impTooltip}\r\n                      >\r\n                        <ShieldFillCheck />\r\n                      </OverlayTrigger>\r\n                    ) : (\r\n                      <p></p>\r\n                    )}\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title> {item.subject} </Card.Title>\r\n                    <Card.Text>\r\n                      <div\r\n                        dangerouslySetInnerHTML={{ __html: item.note }}\r\n                      ></div>\r\n                    </Card.Text>\r\n                    <div>\r\n                      <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        delay={{ show: 250, hide: 400 }}\r\n                        overlay={updateTooltip}\r\n                      >\r\n                        <PencilFill\r\n                          size={25}\r\n                          style={{ marginRight: 20 }}\r\n                          onDoubleClick={() => {\r\n                            navigate(\"/NoteView\", {\r\n                              state: {\r\n                                subject: item.subject,\r\n                                note: item.note,\r\n                                id: item._id,\r\n                                imp: item.imp_note,\r\n                              },\r\n                            });\r\n                          }}\r\n                        />\r\n                      </OverlayTrigger>\r\n                      <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        delay={{ show: 250, hide: 400 }}\r\n                        overlay={deleteTooltip}\r\n                      >\r\n                        <TrashFill\r\n                          size={25}\r\n                          onClick={() => {\r\n                            setRemove(true);\r\n                            dispatch(deletenotes(item._id));\r\n                            setShow(true);\r\n                          }}\r\n                        />\r\n                      </OverlayTrigger>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </div>\r\n            );\r\n          })}\r\n        </Row>\r\n        {impHead == true ? (\r\n          <h1 className=\"text-center m-5\">ImportentNotes</h1>\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n        <Row>\r\n          {impnotes.map((item) => {\r\n            color = \"Danger\";\r\n            return (\r\n              <div>\r\n                <Card\r\n                  bg={color.toLowerCase()}\r\n                  key={item._id}\r\n                  text={color.toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n                  style={{ width: \"16rem\" }}\r\n                  className=\"m-2 mr-3\"\r\n                >\r\n                  <Card.Header>\r\n                    {item.imp_note == true ? (\r\n                      <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        delay={{ show: 250, hide: 400 }}\r\n                        overlay={impTooltip}\r\n                      >\r\n                        <ShieldFillCheck />\r\n                      </OverlayTrigger>\r\n                    ) : (\r\n                      <p></p>\r\n                    )}\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title> {item.subject} </Card.Title>\r\n                    <Card.Text>\r\n                      <div\r\n                        dangerouslySetInnerHTML={{ __html: item.note }}\r\n                      ></div>\r\n                    </Card.Text>\r\n                    <div>\r\n                      <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        delay={{ show: 250, hide: 400 }}\r\n                        overlay={updateTooltip}\r\n                      >\r\n                        <PencilFill\r\n                          size={25}\r\n                          style={{ marginRight: 20 }}\r\n                          onDoubleClick={() => {\r\n                            navigate(\"/NoteView\", {\r\n                              state: {\r\n                                subject: item.subject,\r\n                                note: item.note,\r\n                                id: item._id,\r\n                                imp: item.imp_note,\r\n                              },\r\n                            });\r\n                          }}\r\n                        />\r\n                      </OverlayTrigger>\r\n                      <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        delay={{ show: 250, hide: 400 }}\r\n                        overlay={deleteTooltip}\r\n                      >\r\n                        <TrashFill\r\n                          size={25}\r\n                          onClick={() => {\r\n                            setRemove(true);\r\n                            dispatch(deletenotes(item._id));\r\n                            setShow(true);\r\n                          }}\r\n                        />\r\n                      </OverlayTrigger>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </div>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n        <path\r\n          fill=\"#d13d4b\"\r\n          fill-opacity=\"1\"\r\n          d=\"M0,32L48,37.3C96,43,192,53,288,69.3C384,85,480,107,576,133.3C672,160,768,192,864,186.7C960,181,1056,139,1152,133.3C1248,128,1344,160,1392,176L1440,192L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\r\n        ></path>\r\n      </svg>\r\n\r\n      <footer\r\n        style={{\r\n          background: \"black\",\r\n          bottom: 0,\r\n          width: \"100%\",\r\n          height: 50,\r\n        }}\r\n        xs={12}\r\n        md={12}\r\n      >\r\n        <p style={{ color: \"white\" }}>\r\n          © 2021 Copyright: Lk@Darshan.All rights reserved\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport { BoxArrowInRight } from \"react-bootstrap-icons\";\r\nimport { changePass } from \"../reducers/authReducers\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function ConfirmPass() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [pass2, setPass2] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n\r\n  const { loading, error, enter } = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <div>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n        <path\r\n          fill=\"#d13d4b\"\r\n          fill-opacity=\"1\"\r\n          d=\"M0,224L60,229.3C120,235,240,245,360,240C480,235,600,213,720,186.7C840,160,960,128,1080,128C1200,128,1320,160,1380,176L1440,192L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\"\r\n        ></path>\r\n      </svg>\r\n      <Container className=\"mt-5\">\r\n        <div>\r\n          <Row>\r\n            <Container>\r\n              <Row>\r\n                <Col xs={12} md={6} style={{ backgroundColor: \"\" }}>\r\n                  {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                  <br />\r\n                  {loading && (\r\n                    <div className=\"text-center m-5\">\r\n                      <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                      </Spinner>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* <h5>Your OTP will be destroy in 5 Minutes</h5> */}\r\n                  <h3>Change Password</h3>\r\n\r\n                  <br />\r\n\r\n                  <Form>\r\n                    <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                      <Form.Label>Email</Form.Label>\r\n                      <Form.Control\r\n                        placeholder=\"Enter Your Email\"\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"username\">\r\n                      <Form.Label>OTP</Form.Label>\r\n                      <Form.Control\r\n                        placeholder=\"Enter Your OTP\"\r\n                        type=\"text\"\r\n                        value={code}\r\n                        onChange={(e) => setCode(e.target.value)}\r\n                        placeholder=\"Enter Your username or email\"\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"note\">\r\n                      <Form.Label>Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        placeholder=\"password\"\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"note\">\r\n                      <Form.Label>confirm Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={pass2}\r\n                        onChange={(e) => setPass2(e.target.value)}\r\n                        placeholder=\" confirm password\"\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"mt-3\"\r\n                      onClick={() => {\r\n                        if (password == pass2) {\r\n                          dispatch(changePass({ email, code, password }));\r\n                          navigate(\"/\");\r\n                        } else {\r\n                          setPass2(\"\");\r\n                          setPassword(\"\");\r\n                        }\r\n                      }}\r\n                    >\r\n                      <BoxArrowInRight style={{ marginRight: 3 }} />\r\n                      submit\r\n                    </Button>\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Row>\r\n        </div>\r\n      </Container>\r\n\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n        <path\r\n          fill=\"#d13d4b\"\r\n          fill-opacity=\"1\"\r\n          d=\"M0,32L48,37.3C96,43,192,53,288,69.3C384,85,480,107,576,133.3C672,160,768,192,864,186.7C960,181,1056,139,1152,133.3C1248,128,1344,160,1392,176L1440,192L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\r\n        ></path>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport { BoxArrowInRight } from \"react-bootstrap-icons\";\r\nimport { sendEmail} from \"../reducers/authReducers\";\r\nexport default function SendEmail() {\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const { loading, error } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n        <path\r\n          fill=\"#d13d4b\"\r\n          fill-opacity=\"1\"\r\n          d=\"M0,224L60,229.3C120,235,240,245,360,240C480,235,600,213,720,186.7C840,160,960,128,1080,128C1200,128,1320,160,1380,176L1440,192L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\"\r\n        ></path>\r\n      </svg>\r\n      <Container className=\"mt-5\">\r\n        <div>\r\n          <Row>\r\n            <Container>\r\n              <Row>\r\n                <Col xs={12} md={6} style={{ backgroundColor: \"\" }}>\r\n                  {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                  <br />\r\n                  {loading && (\r\n                    <div className=\"text-center m-5\">\r\n                      <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                      </Spinner>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* <h5>Your OTP will be destroy in 5 Minutes</h5> */}\r\n                  <h3>Send Email</h3>\r\n\r\n                  <br />\r\n\r\n                  <Form>\r\n                    <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                      <Form.Label>Email</Form.Label>\r\n                      <Form.Control\r\n                        placeholder=\"Enter Your Email\"\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"mt-3\"\r\n                      onClick={() => {\r\n                        dispatch(sendEmail({email}))\r\n                        \r\n                        navigate(\"/ConfirmPass\");\r\n                      }}\r\n                    >\r\n                      <BoxArrowInRight style={{ marginRight: 3 }} />\r\n                      submit\r\n                    </Button>\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Row>\r\n        </div>\r\n      </Container>\r\n\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n        <path\r\n          fill=\"#d13d4b\"\r\n          fill-opacity=\"1\"\r\n          d=\"M0,32L48,37.3C96,43,192,53,288,69.3C384,85,480,107,576,133.3C672,160,768,192,864,186.7C960,181,1056,139,1152,133.3C1248,128,1344,160,1392,176L1440,192L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\r\n        ></path>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Auth from \"./components/Auth\";\n// import Note from \"./components/Note\";\nimport Note1 from \"./components/Note1\";\nimport NoteView from \"./components/NoteView\";\nimport { addToken } from \"./reducers/authReducers\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport FindNote from \"./components/FindNote\";\nimport ConfirmPass from \"./components/ConfirmPass\";\nimport SendEmail from \"./components/SendEmail\";\n\nfunction App() {\n  const token = useSelector((state) => state.user.token);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(addToken());\n  }, []);\n  {\n    /* <div className=\"App\">{token ? <Note1 /> : <Auth />}</div> */\n  }\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" exact element={token ? <Note1 /> : <Auth /> }></Route>\n        <Route path=\"/ConfirmPass\" exaxt element={<ConfirmPass/>}></Route>\n        <Route path=\"/SendEmail\" exaxt element={<SendEmail/>}></Route>\n        <Route path=\"/NoteView\" exact element={<NoteView/>}></Route>\n        <Route path=\"/FindNote\" exact element={<FindNote/>}></Route>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport authReducers from '../reducers/authReducers';\nimport  noteReducers from '../reducers/noteReducers';\n\nexport const store = configureStore({\n  reducer: {\n    user:authReducers,\n    note:noteReducers\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}